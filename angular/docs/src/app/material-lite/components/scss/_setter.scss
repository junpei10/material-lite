@mixin ml-theme($theme, $palette) {
  $theme: _createTemplateTheme($theme);
  $palette: _createTemplatePalette($palette);

  @include ml-button-theme($theme, $palette);
}

@function ml-create-theme($theme, $base: light) {
  $template: _createTemplatePalette($base);
  $theme: map-unquote($theme);
  $returns: map-merge($base, $theme);
  @return $returns;
}

@function ml-create-palette($palette, $base: light) {
  $template: _createTemplatePalette($base);
  $palette: map-unquote($palette);
  $returns: map-merge($base, $palette);
  @return $returns;
}

@function _createTemplateTheme($theme) {
  @if $theme == light {
    @return $ml-light-theme;

  } @else if $theme == dark {
    @return $ml-dark-theme;

  } @else if $theme == css-variable or $theme == cssVariable {
    @return $ml-css-variable-theme;

  } @else {
    @return $theme;
  }
}

@function _createTemplatePalette($palette) {
  @if $palette == css-variable or $palette == cssVariable {
    @return $ml-css-variable-palette;

  } @else if $palette == indigo-pink or $palette == indigoPink {
    @return $ml-indigo-pink-palette;

  } @else if $palette == purple-green or $palette == purpleGreen {
    @return $ml-purple-green-palette;

  } @else if $palette == deep-purple-amber or $palette == deepPurpleAmber or $palette == deepPurple-amber {
    @return $ml-deepPurple-amber-palette;

  } @else if $palette == pink-blue-grey or $palette == pink-blueGrey or $palette == pinkBlueGrey or $palette == pink-blue-gray or $palette == pink-blueGray or $palette == pinkBlueGray {
    @return $ml-pink-blueGrey-palette;

  }@else {
    @return $palette;
  }
}
