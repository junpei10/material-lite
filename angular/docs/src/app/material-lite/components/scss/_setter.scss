$ml-theme-component-list: (button, slide-toggle);

@mixin ml-theme($theme, $palette, $use: $ml-theme-component-list) {
  $theme: ml-create-theme(ml-template-theme($theme));
  $palette: ml-create-palette(ml-template-palette($palette));

  background-color: map-get($theme, background);
  color: map-get($theme, text);

  @include ml-palette-style($palette);

  @if (contains($use, button)) {
    @include ml-button-theme($theme, $palette);
  }

  @if (contains($use, slide-toggle)) {
    @include ml-slide-toggle-theme($theme, $palette);
  }
}

@function ml-create-theme($theme, $base: light) {
  $theme: map-unquote($theme);
  $base: ml-template-theme($base);

  @return map-merge($base, $theme);
}

@function ml-create-palette($palette, $base: indigo-pink) {
  $palette: map-unquote($palette);
  $base: ml-template-palette($base);

  @return map-merge($base, $palette);
}

@function ml-template-theme($theme) {
  @if $theme == light {
    @return $ml-light-theme;
  } @else if $theme == dark {
    @return $ml-dark-theme;
  } @else if $theme == css-variable or $theme == cssVariable {
    @return $ml-css-variable-theme;
  } @else {
    @return $theme;
  }
}
@function ml-template-palette($palette) {
  @if $palette == css-variable or $palette == cssVariable {
    @return $ml-css-variable-palette;
  } @else if $palette == indigo-pink {
    @return $ml-indigo-pink-palette;
  } @else if $palette == purple-green {
    @return $ml-purple-green-palette;
  } @else if $palette == deep-purple-amber or $palette == deepPurple-amber {
    @return $ml-deepPurple-amber-palette;
  } @else if
    $palette ==
    pink-blue-grey or
    $palette ==
    pink-blueGrey or
    $palette ==
    pink-blue-gray or
    $palette ==
    pink-blueGray
  {
    @return $ml-pink-blueGrey-palette;
  } @else {
    @return $palette;
  }
}
